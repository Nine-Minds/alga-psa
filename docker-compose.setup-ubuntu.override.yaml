services:
  setup:
    build:
      context: .
      dockerfile: setup/Dockerfile.ubuntu
    image: alga-setup:ubuntu
    platform: linux/amd64
    restart: "no"
    environment:
      EDITION: community
      NODE_OPTIONS: --experimental-vm-modules
      DB_NAME_SERVER: ${DB_NAME_SERVER:-server}
      DB_USER_SERVER: ${DB_USER_SERVER:-app_user}
      DB_USER_ADMIN: ${DB_USER_ADMIN:-postgres}
      PGBOSS_DATABASE: ${PGBOSS_DATABASE:-server}
      VERSION: ${VERSION}
      APP_NAME: ${APP_NAME}
      APP_ENV: ${APP_ENV:-development}
      NODE_ENV: ${APP_ENV:-development}
      HOST: ${HOST}
      DB_TYPE: ${DB_TYPE:-postgres}
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      LOG_IS_FORMAT_JSON: ${LOG_IS_FORMAT_JSON:-false}
      LOG_IS_FULL_DETAILS: ${LOG_IS_FULL_DETAILS:-false}
      EMAIL_ENABLE: ${EMAIL_ENABLE:-false}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@example.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USERNAME: ${EMAIL_USERNAME:-noreply@example.com}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SESSION_EXPIRES: ${NEXTAUTH_SESSION_EXPIRES:-86400}
    volumes:
      - type: bind
        source: ./setup/config.ini
        target: /app/setup/config.ini
        read_only: true
      - type: bind
        source: ./setup/entrypoint.sh
        target: /app/setup/entrypoint.sh
        read_only: true
      - type: bind
        source: ./secrets/postgres_password
        target: /run/secrets/postgres_password
        read_only: true
      - type: bind
        source: ./secrets/db_password_server
        target: /run/secrets/db_password_server
        read_only: true
    secrets:
      - postgres_password
      - db_password_server
    entrypoint: ["/app/setup/entrypoint.sh"]
