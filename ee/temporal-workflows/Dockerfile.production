FROM node:20-bullseye AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy package files from the correct paths when building from project root
COPY ee/temporal-workflows/package*.json ./
COPY ee/temporal-workflows/tsconfig.json ./

# We need to skip the initial npm ci because it requires @alga-psa/shared
# which will be built in the development stage

# Development stage
FROM base AS development
RUN npm ci

# First, we need to copy and build shared
# Note: This assumes the Docker build context is set to project root
WORKDIR /app/shared
COPY shared/package.json ./
RUN npm ci
COPY shared/ ./
RUN npm run build

# Now build temporal-workflows
WORKDIR /app
COPY ee/temporal-workflows/ ./
RUN npm run build

# Production stage
FROM base AS production

# Copy built application
COPY --from=development /app/dist ./dist
COPY --from=development /app/shared ./shared
COPY --from=development /app/package*.json ./
COPY --from=development /app/node_modules ./node_modules

# Create non-root user
RUN groupadd -r temporal && useradd -r -g temporal temporal
RUN chown -R temporal:temporal /app
USER temporal

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD node -e "console.log('Health check: OK')" || exit 1

# Expose health check port
EXPOSE 8080

# Default command runs the worker
CMD ["npm", "run", "start"]