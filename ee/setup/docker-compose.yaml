version: '3.8'

services:
  server:
    extends:
      file: docker-compose.yaml
      service: server
    build:
      context: .
      dockerfile: ee/server/Dockerfile
    environment:
      EDITION: enterprise
      DB_NAME: server
      PGBOSS_DATABASE: server
      DB_NAME_SERVER: server
      DB_USER_SERVER: postgres
      DB_USER: postgres
    volumes:
      - type: bind
        source: ./secrets/postgres_password
        target: /run/secrets/postgres_password
        read_only: true
    entrypoint: ["/bin/sh", "-c", "export DATABASE_URL=postgresql://postgres:$$(cat /run/secrets/postgres_password)@postgres:5432/server && /app/entrypoint.sh"]
    secrets:
      - postgres_password
      - db_password_server
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules
        - action: rebuild
          path: package.json

  setup:
    extends:
      file: docker-compose.yaml
      service: setup
    build:
      context: .
      dockerfile: ee/server/Dockerfile
    container_name: ${APP_NAME:-sebastian}_setup_ee
    networks:
      - app-network
    environment:
      VERSION: ${VERSION}
      APP_NAME: ${APP_NAME}
      APP_ENV: ${APP_ENV:-development}
      NODE_ENV: ${APP_ENV:-development}
      EDITION: enterprise
      NODE_OPTIONS: --experimental-vm-modules
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME_SERVER: server
      DB_USER_SERVER: postgres
      DB_USER: postgres
      DB_NAME: server
      PGBOSS_DATABASE: server
    volumes:
      - ./ee/setup/config.ini:/app/config.ini
      - type: bind
        source: ./secrets/postgres_password
        target: /run/secrets/postgres_password
        read_only: true
    secrets:
      - postgres_password
      - db_password_server
    depends_on:
      postgres:
        condition: service_started
    entrypoint: ["/app/entrypoint.sh"]

  postgres:
    extends:
      file: docker-compose.yaml
      service: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: server
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_password
    networks:
      - app-network

networks:
  app-network:
    name: ${APP_NAME:-sebastian}_app-network
    driver: bridge

secrets:
  postgres_password:
    file: ./secrets/postgres_password
  db_password_server:
    file: ./secrets/db_password_server
