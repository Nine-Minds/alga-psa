/* eslint-disable */
// AUTO-GENERATED FILE. DO NOT EDIT.
// Generated by ee/scripts/generate-chat-registry.mjs
import { ChatApiRegistryEntry } from './apiRegistry.schema';

export const chatApiRegistry: ChatApiRegistryEntry[] = [
  {
    "id": "get-_api_v1_categories_service",
    "method": "get",
    "path": "/api/v1/categories/service",
    "displayName": "List Service Categories",
    "summary": "List service categories",
    "description": "Returns a paginated list of service categories within the current tenant.",
    "tags": [
      "Service Categories"
    ],
    "rbacResource": "service-category",
    "approvalRequired": false,
    "parameters": [
      {
        "name": "search",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "is_active",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ServiceCategory"
          }
        },
        "pagination": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer"
            },
            "limit": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            },
            "totalPages": {
              "type": "integer"
            },
            "hasNext": {
              "type": "boolean"
            },
            "hasPrev": {
              "type": "boolean"
            }
          },
          "required": [
            "page",
            "limit",
            "total",
            "totalPages",
            "hasNext",
            "hasPrev"
          ]
        },
        "meta": {
          "type": "object",
          "additionalProperties": {}
        }
      },
      "required": [
        "data",
        "pagination"
      ]
    },
    "playbooks": [
      "service-categories/list-basic"
    ],
    "examples": [
      {
        "name": "List active categories",
        "request": {
          "query": {
            "is_active": true
          }
        }
      }
    ]
  },
  {
    "id": "post-_api_v1_categories_service",
    "method": "post",
    "path": "/api/v1/categories/service",
    "displayName": "Create service category",
    "summary": "Create service category",
    "description": "Creates a new service category. Do not call this while creating tickets unless the user explicitly asks to manage categories.",
    "tags": [
      "Service Categories"
    ],
    "approvalRequired": true,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {
        "category_name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 1000
        },
        "is_active": {
          "type": "boolean"
        }
      },
      "required": [
        "category_name"
      ],
      "description": "Payload for creating a service category."
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/components/schemas/ServiceCategory"
        }
      },
      "required": [
        "data"
      ]
    },
    "playbooks": [
      "service-categories/create-basic"
    ],
    "examples": [
      {
        "name": "Create a new service category",
        "request": {
          "body": {
            "category_name": "Remote Support",
            "description": "Standard remote troubleshooting",
            "is_active": true
          }
        }
      }
    ]
  },
  {
    "id": "get-_api_auth_google_callback",
    "method": "get",
    "path": "/api/auth/google/callback",
    "displayName": "GET auth",
    "summary": "GET auth",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_auth_microsoft_callback",
    "method": "get",
    "path": "/api/auth/microsoft/callback",
    "displayName": "GET auth",
    "summary": "GET auth",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_auth_session",
    "method": "get",
    "path": "/api/auth/session",
    "displayName": "GET auth",
    "summary": "GET auth",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_auth_validateapikey",
    "method": "post",
    "path": "/api/auth/validate-api-key",
    "displayName": "POST auth",
    "summary": "POST auth",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_auth_validatetoken",
    "method": "post",
    "path": "/api/auth/validate-token",
    "displayName": "POST auth",
    "summary": "POST auth",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_auth_nextauth",
    "method": "get",
    "path": "/api/auth/{nextauth}",
    "displayName": "GET auth",
    "summary": "GET auth",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_auth_nextauth",
    "method": "post",
    "path": "/api/auth/{nextauth}",
    "displayName": "POST auth",
    "summary": "POST auth",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_billing_licencecount",
    "method": "get",
    "path": "/api/billing/licence-count",
    "displayName": "GET billing",
    "summary": "GET billing",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "billing"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_billing_licencecount",
    "method": "post",
    "path": "/api/billing/licence-count",
    "displayName": "POST billing",
    "summary": "POST billing",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "billing"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_chat_stream_title",
    "method": "post",
    "path": "/api/chat/stream/title",
    "displayName": "POST chat",
    "summary": "POST chat",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "chat"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_chat_stream_slug",
    "method": "get",
    "path": "/api/chat/stream/{slug}",
    "displayName": "GET chat",
    "summary": "GET chat",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "chat"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_chat_stream_slug",
    "method": "post",
    "path": "/api/chat/stream/{slug}",
    "displayName": "POST chat",
    "summary": "POST chat",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "chat"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_documents_download_fileid",
    "method": "get",
    "path": "/api/documents/download/{fileId}",
    "displayName": "GET documents",
    "summary": "GET documents",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "documents"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_documents_view_fileid",
    "method": "get",
    "path": "/api/documents/view/{fileId}",
    "displayName": "GET documents",
    "summary": "GET documents",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "documents"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_documents_documentid_download",
    "method": "get",
    "path": "/api/documents/{documentId}/download",
    "displayName": "GET documents",
    "summary": "GET documents",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "documents"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_email_oauth_initiate",
    "method": "post",
    "path": "/api/email/oauth/initiate",
    "displayName": "POST email",
    "summary": "POST email",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "email"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_email_refreshwatch",
    "method": "post",
    "path": "/api/email/refresh-watch",
    "displayName": "POST email",
    "summary": "POST email",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "email"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_email_webhooks_google",
    "method": "post",
    "path": "/api/email/webhooks/google",
    "displayName": "POST email",
    "summary": "POST email",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "email"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_email_webhooks_microsoft",
    "method": "get",
    "path": "/api/email/webhooks/microsoft",
    "displayName": "GET email",
    "summary": "GET email",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "email"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_email_webhooks_microsoft",
    "method": "post",
    "path": "/api/email/webhooks/microsoft",
    "displayName": "POST email",
    "summary": "POST email",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "email"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_email_webhooks_test",
    "method": "post",
    "path": "/api/email/webhooks/test",
    "displayName": "POST email",
    "summary": "POST email",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "email"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_ext_extensionid_path",
    "method": "get",
    "path": "/api/ext/{extensionId}/{path}",
    "displayName": "GET ext",
    "summary": "GET ext",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "ext"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_ext_extensionid_path",
    "method": "post",
    "path": "/api/ext/{extensionId}/{path}",
    "displayName": "POST ext",
    "summary": "POST ext",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "ext"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_ext_extensionid_path",
    "method": "put",
    "path": "/api/ext/{extensionId}/{path}",
    "displayName": "PUT ext",
    "summary": "PUT ext",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "ext"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "patch-_api_ext_extensionid_path",
    "method": "patch",
    "path": "/api/ext/{extensionId}/{path}",
    "displayName": "PATCH ext",
    "summary": "PATCH ext",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "ext"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_ext_extensionid_path",
    "method": "delete",
    "path": "/api/ext/{extensionId}/{path}",
    "displayName": "DELETE ext",
    "summary": "DELETE ext",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "ext"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_softwareone_agreements",
    "method": "get",
    "path": "/api/extensions/softwareone/agreements",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_extensions_softwareone_agreements",
    "method": "post",
    "path": "/api/extensions/softwareone/agreements",
    "displayName": "POST extensions",
    "summary": "POST extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_softwareone_agreements_id",
    "method": "get",
    "path": "/api/extensions/softwareone/agreements/{id}",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_softwareone_statements",
    "method": "get",
    "path": "/api/extensions/softwareone/statements",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_extensions_softwareone_statements",
    "method": "post",
    "path": "/api/extensions/softwareone/statements",
    "displayName": "POST extensions",
    "summary": "POST extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_softwareone_statements_id",
    "method": "get",
    "path": "/api/extensions/softwareone/statements/{id}",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_softwareone_statements_id_charges",
    "method": "get",
    "path": "/api/extensions/softwareone/statements/{id}/charges",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_extensions_softwareone_sync",
    "method": "post",
    "path": "/api/extensions/softwareone/sync",
    "displayName": "POST extensions",
    "summary": "POST extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_extensionid_agreements",
    "method": "get",
    "path": "/api/extensions/{extensionId}/agreements",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_extensionid_agreements_id",
    "method": "get",
    "path": "/api/extensions/{extensionId}/agreements/{id}",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_extensionid_statements",
    "method": "get",
    "path": "/api/extensions/{extensionId}/statements",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_extensionid_statements_id",
    "method": "get",
    "path": "/api/extensions/{extensionId}/statements/{id}",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_extensionid_statements_id_charges",
    "method": "get",
    "path": "/api/extensions/{extensionId}/statements/{id}/charges",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_extensions_extensionid_sync",
    "method": "post",
    "path": "/api/extensions/{extensionId}/sync",
    "displayName": "POST extensions",
    "summary": "POST extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_files_fileid_download",
    "method": "get",
    "path": "/api/files/{fileId}/download",
    "displayName": "GET files",
    "summary": "GET files",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "files"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_health",
    "method": "get",
    "path": "/api/health",
    "displayName": "GET health",
    "summary": "GET health",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "health"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_healthz",
    "method": "get",
    "path": "/api/healthz",
    "displayName": "GET healthz",
    "summary": "GET healthz",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "healthz"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_installs_lookupbyhost",
    "method": "get",
    "path": "/api/installs/lookup-by-host",
    "displayName": "GET installs",
    "summary": "GET installs",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "installs"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_installs_validate",
    "method": "get",
    "path": "/api/installs/validate",
    "displayName": "GET installs",
    "summary": "GET installs",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "installs"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_integrations_qbo_callback",
    "method": "get",
    "path": "/api/integrations/qbo/callback",
    "displayName": "GET integrations",
    "summary": "GET integrations",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_integrations_qbo_connect",
    "method": "get",
    "path": "/api/integrations/qbo/connect",
    "displayName": "GET integrations",
    "summary": "GET integrations",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_integrations_qbo_status",
    "method": "get",
    "path": "/api/integrations/qbo/status",
    "displayName": "GET integrations",
    "summary": "GET integrations",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_readyz",
    "method": "get",
    "path": "/api/readyz",
    "displayName": "GET readyz",
    "summary": "GET readyz",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "readyz"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_admin_telemetrysettings",
    "method": "get",
    "path": "/api/v1/admin/telemetry-settings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "admin"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_admin_telemetrysettings",
    "method": "post",
    "path": "/api/v1/admin/telemetry-settings",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "admin"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets",
    "method": "get",
    "path": "/api/v1/assets",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_assets",
    "method": "post",
    "path": "/api/v1/assets",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_assets_bulkstatus",
    "method": "put",
    "path": "/api/v1/assets/bulk-status",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_assets_bulkupdate",
    "method": "put",
    "path": "/api/v1/assets/bulk-update",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_assets_documents_associationid",
    "method": "delete",
    "path": "/api/v1/assets/documents/{associationId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets_export",
    "method": "get",
    "path": "/api/v1/assets/export",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_assets_maintenance_scheduleid",
    "method": "put",
    "path": "/api/v1/assets/maintenance/{scheduleId}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_assets_maintenance_scheduleid",
    "method": "delete",
    "path": "/api/v1/assets/maintenance/{scheduleId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_assets_relationships_relationshipid",
    "method": "delete",
    "path": "/api/v1/assets/relationships/{relationshipId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets_search",
    "method": "get",
    "path": "/api/v1/assets/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets_stats",
    "method": "get",
    "path": "/api/v1/assets/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets_id",
    "method": "get",
    "path": "/api/v1/assets/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_assets_id",
    "method": "put",
    "path": "/api/v1/assets/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_assets_id",
    "method": "delete",
    "path": "/api/v1/assets/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets_id_documents",
    "method": "get",
    "path": "/api/v1/assets/{id}/documents",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_assets_id_documents",
    "method": "post",
    "path": "/api/v1/assets/{id}/documents",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets_id_history",
    "method": "get",
    "path": "/api/v1/assets/{id}/history",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets_id_maintenance",
    "method": "get",
    "path": "/api/v1/assets/{id}/maintenance",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_assets_id_maintenance",
    "method": "post",
    "path": "/api/v1/assets/{id}/maintenance",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_assets_id_maintenance_record",
    "method": "post",
    "path": "/api/v1/assets/{id}/maintenance/record",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_assets_id_relationships",
    "method": "get",
    "path": "/api/v1/assets/{id}/relationships",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_assets_id_relationships",
    "method": "post",
    "path": "/api/v1/assets/{id}/relationships",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "assets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_executions",
    "method": "get",
    "path": "/api/v1/automation/executions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_executions_id",
    "method": "get",
    "path": "/api/v1/automation/executions/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_automation_executions_id_retry",
    "method": "post",
    "path": "/api/v1/automation/executions/{id}/retry",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_meta",
    "method": "get",
    "path": "/api/v1/automation/meta",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_performance",
    "method": "get",
    "path": "/api/v1/automation/performance",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_rules",
    "method": "get",
    "path": "/api/v1/automation/rules",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_automation_rules",
    "method": "post",
    "path": "/api/v1/automation/rules",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_automation_rules_bulkexecute",
    "method": "post",
    "path": "/api/v1/automation/rules/bulk-execute",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_automation_rules_bulkstatus",
    "method": "post",
    "path": "/api/v1/automation/rules/bulk-status",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_rules_id",
    "method": "get",
    "path": "/api/v1/automation/rules/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_automation_rules_id",
    "method": "put",
    "path": "/api/v1/automation/rules/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_automation_rules_id",
    "method": "delete",
    "path": "/api/v1/automation/rules/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_automation_rules_id_execute",
    "method": "post",
    "path": "/api/v1/automation/rules/{id}/execute",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_statistics",
    "method": "get",
    "path": "/api/v1/automation/statistics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_templates",
    "method": "get",
    "path": "/api/v1/automation/templates",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_automation_templates",
    "method": "post",
    "path": "/api/v1/automation/templates",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_automation_templates_id",
    "method": "get",
    "path": "/api/v1/automation/templates/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_automation_templates_id_use",
    "method": "post",
    "path": "/api/v1/automation/templates/{id}/use",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "automation"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_billinganalytics_overview",
    "method": "get",
    "path": "/api/v1/billing-analytics/overview",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "billing-analytics"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contractlines",
    "method": "get",
    "path": "/api/v1/contract-lines",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contractlines",
    "method": "post",
    "path": "/api/v1/contract-lines",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contractlines_bulk",
    "method": "post",
    "path": "/api/v1/contract-lines/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_contractlines_bulk",
    "method": "put",
    "path": "/api/v1/contract-lines/bulk",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_contractlines_bulk",
    "method": "delete",
    "path": "/api/v1/contract-lines/bulk",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contractlines_bulk_addservices",
    "method": "post",
    "path": "/api/v1/contract-lines/bulk/add-services",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contractlines_bulk_create",
    "method": "post",
    "path": "/api/v1/contract-lines/bulk/create",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_contractlines_bulk_delete",
    "method": "delete",
    "path": "/api/v1/contract-lines/bulk/delete",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_contractlines_bulk_removeservices",
    "method": "delete",
    "path": "/api/v1/contract-lines/bulk/remove-services",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_contractlines_bulk_update",
    "method": "put",
    "path": "/api/v1/contract-lines/bulk/update",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contractlines_id",
    "method": "get",
    "path": "/api/v1/contract-lines/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_contractlines_id",
    "method": "put",
    "path": "/api/v1/contract-lines/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_contractlines_id",
    "method": "delete",
    "path": "/api/v1/contract-lines/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_contractlines_id_activation",
    "method": "put",
    "path": "/api/v1/contract-lines/{id}/activation",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contractlines_id_analytics",
    "method": "get",
    "path": "/api/v1/contract-lines/{id}/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contractlines_id_copy",
    "method": "post",
    "path": "/api/v1/contract-lines/{id}/copy",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contractlines_id_fixedconfig",
    "method": "get",
    "path": "/api/v1/contract-lines/{id}/fixed-config",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_contractlines_id_fixedconfig",
    "method": "put",
    "path": "/api/v1/contract-lines/{id}/fixed-config",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contractlines_id_services",
    "method": "get",
    "path": "/api/v1/contract-lines/{id}/services",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contractlines_id_services",
    "method": "post",
    "path": "/api/v1/contract-lines/{id}/services",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contractlines_id_services_serviceid",
    "method": "get",
    "path": "/api/v1/contract-lines/{id}/services/{serviceId}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_contractlines_id_services_serviceid",
    "method": "put",
    "path": "/api/v1/contract-lines/{id}/services/{serviceId}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_contractlines_id_services_serviceid",
    "method": "delete",
    "path": "/api/v1/contract-lines/{id}/services/{serviceId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contractlines_id_usagemetrics",
    "method": "get",
    "path": "/api/v1/contract-lines/{id}/usage-metrics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_categories_analytics",
    "method": "get",
    "path": "/api/v1/categories/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_categories_bulk_delete",
    "method": "post",
    "path": "/api/v1/categories/bulk/delete",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_categories_search",
    "method": "get",
    "path": "/api/v1/categories/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_categories_service_id",
    "method": "get",
    "path": "/api/v1/categories/service/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_categories_service_id",
    "method": "put",
    "path": "/api/v1/categories/service/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_categories_service_id",
    "method": "delete",
    "path": "/api/v1/categories/service/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_categories_ticket",
    "method": "get",
    "path": "/api/v1/categories/ticket",
    "displayName": "List Ticket Categories",
    "summary": "Fetch ticket categories",
    "description": "Provides the category catalog used when assigning category_id or subcategory_id to a ticket.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "board_id",
        "in": "query",
        "required": false,
        "description": "Filter categories that belong to a specific ticket board.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "is_active",
        "in": "query",
        "required": false,
        "description": "Toggle to include inactive categories.",
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Number of categories per page (default 25, max 100).",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      },
      {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "Pagination page number.",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    },
    "examples": [
      {
        "name": "Categories for a board",
        "request": {
          "query": {
            "board_id": "11111111-1111-1111-1111-111111111111",
            "limit": 10
          }
        },
        "notes": "Pair this with the board_id you plan to use on the ticket so category selections stay consistent."
      }
    ]
  },
  {
    "id": "post-_api_v1_categories_ticket",
    "method": "post",
    "path": "/api/v1/categories/ticket",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_categories_ticket_move",
    "method": "post",
    "path": "/api/v1/categories/ticket/move",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_categories_ticket_tree",
    "method": "get",
    "path": "/api/v1/categories/ticket/tree",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_categories_ticket_tree_boardid",
    "method": "get",
    "path": "/api/v1/categories/ticket/tree/{boardId}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_categories_ticket_id",
    "method": "get",
    "path": "/api/v1/categories/ticket/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_categories_ticket_id",
    "method": "put",
    "path": "/api/v1/categories/ticket/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_categories_ticket_id",
    "method": "delete",
    "path": "/api/v1/categories/ticket/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "categories"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_clients",
    "method": "get",
    "path": "/api/v1/clients",
    "displayName": "List Clients",
    "summary": "Fetch clients for the current tenant",
    "description": "Returns paginated client records. Use this before creating tickets to map human-readable client names to client_id values.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "client_name",
        "in": "query",
        "required": false,
        "description": "Optional case-insensitive filter on the client name.",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "is_inactive",
        "in": "query",
        "required": false,
        "description": "When true, include inactive clients as well as active ones.",
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Number of records per page (default 25, max 100).",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      },
      {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "Pagination page number starting at 1.",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    },
    "examples": [
      {
        "name": "Find a specific client",
        "request": {
          "query": {
            "client_name": "Acme",
            "limit": 5
          }
        },
        "notes": "Use a small limit when searching for a client name mentioned by the user so you can quickly grab the matching client_id. If the user did not name a specific client, reuse the first client_id returned."
      }
    ]
  },
  {
    "id": "post-_api_v1_clients",
    "method": "post",
    "path": "/api/v1/clients",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_clients_stats",
    "method": "get",
    "path": "/api/v1/clients/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_clients_id",
    "method": "get",
    "path": "/api/v1/clients/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_clients_id",
    "method": "put",
    "path": "/api/v1/clients/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_clients_id",
    "method": "delete",
    "path": "/api/v1/clients/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_clients_id_contacts",
    "method": "get",
    "path": "/api/v1/clients/{id}/contacts",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_clients_id_locations",
    "method": "get",
    "path": "/api/v1/clients/{id}/locations",
    "displayName": "List Client Locations",
    "summary": "Fetch locations for a client",
    "description": "Returns the saved locations for the specified client. Call this when a ticket needs a location_id.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Client identifier whose locations should be listed.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Number of locations to return (default 25, max 100).",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      },
      {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "Pagination page number.",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    },
    "examples": [
      {
        "name": "List locations for client",
        "request": {
          "params": {
            "id": "22222222-2222-2222-2222-222222222222"
          },
          "query": {
            "limit": 5
          }
        },
        "notes": "Use the same client_id supplied to the ticket create payload."
      }
    ]
  },
  {
    "id": "post-_api_v1_clients_id_locations",
    "method": "post",
    "path": "/api/v1/clients/{id}/locations",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "clients"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_clientcontractlines",
    "method": "get",
    "path": "/api/v1/client-contract-lines",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "client-contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_clientcontractlines",
    "method": "post",
    "path": "/api/v1/client-contract-lines",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "client-contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_clientcontractlines_id",
    "method": "delete",
    "path": "/api/v1/client-contract-lines/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "client-contract-lines"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contacts",
    "method": "get",
    "path": "/api/v1/contacts",
    "displayName": "List Contacts",
    "summary": "Fetch contacts",
    "description": "Paginated list of contacts. Filter by client_id to retrieve contacts for a specific client when preparing a ticket.",
    "tags": [
      "contacts"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "client_id",
        "in": "query",
        "required": false,
        "description": "Restrict contacts to a specific client.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "search_term",
        "in": "query",
        "required": false,
        "description": "Search text to match against contact names or emails.",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Number of records per page (default 25, max 100).",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      },
      {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "Pagination page number.",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    },
    "examples": [
      {
        "name": "Find client contacts",
        "request": {
          "query": {
            "client_id": "22222222-2222-2222-2222-222222222222",
            "limit": 5
          }
        },
        "notes": "Use the client_id discovered from the clients endpoint to retrieve matching contacts and resolve contact_name_id."
      }
    ]
  },
  {
    "id": "post-_api_v1_contacts",
    "method": "post",
    "path": "/api/v1/contacts",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contacts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contacts_export",
    "method": "get",
    "path": "/api/v1/contacts/export",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contacts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contacts_search",
    "method": "get",
    "path": "/api/v1/contacts/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contacts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contacts_stats",
    "method": "get",
    "path": "/api/v1/contacts/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contacts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contacts_id",
    "method": "get",
    "path": "/api/v1/contacts/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contacts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_contacts_id",
    "method": "put",
    "path": "/api/v1/contacts/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contacts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_contacts_id",
    "method": "delete",
    "path": "/api/v1/contacts/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contacts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_featureaccess",
    "method": "post",
    "path": "/api/v1/feature-access",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "feature-access"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_featureflags",
    "method": "get",
    "path": "/api/v1/feature-flags",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "feature-flags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_featureflags",
    "method": "post",
    "path": "/api/v1/feature-flags",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "feature-flags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_billing_calculate",
    "method": "post",
    "path": "/api/v1/financial/billing/calculate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_billing_paymentterms",
    "method": "get",
    "path": "/api/v1/financial/billing/payment-terms",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_bulk_credits",
    "method": "post",
    "path": "/api/v1/financial/bulk/credits",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_bulk_invoices",
    "method": "post",
    "path": "/api/v1/financial/bulk/invoices",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_bulk_transactions",
    "method": "post",
    "path": "/api/v1/financial/bulk/transactions",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_credits",
    "method": "get",
    "path": "/api/v1/financial/credits",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_credits_apply",
    "method": "post",
    "path": "/api/v1/financial/credits/apply",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_credits_prepayment",
    "method": "post",
    "path": "/api/v1/financial/credits/prepayment",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_credits_transfer",
    "method": "post",
    "path": "/api/v1/financial/credits/transfer",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_credits_validate",
    "method": "post",
    "path": "/api/v1/financial/credits/validate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_invoices",
    "method": "get",
    "path": "/api/v1/financial/invoices",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_invoices_id_finalize",
    "method": "post",
    "path": "/api/v1/financial/invoices/{id}/finalize",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_invoices_id_items",
    "method": "post",
    "path": "/api/v1/financial/invoices/{id}/items",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_paymentmethods",
    "method": "get",
    "path": "/api/v1/financial/payment-methods",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_paymentmethods",
    "method": "post",
    "path": "/api/v1/financial/payment-methods",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_paymentmethods_id",
    "method": "get",
    "path": "/api/v1/financial/payment-methods/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_financial_paymentmethods_id",
    "method": "put",
    "path": "/api/v1/financial/payment-methods/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_financial_paymentmethods_id",
    "method": "delete",
    "path": "/api/v1/financial/payment-methods/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_reconciliation_run",
    "method": "post",
    "path": "/api/v1/financial/reconciliation/run",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_reconciliation_id_resolve",
    "method": "post",
    "path": "/api/v1/financial/reconciliation/{id}/resolve",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_reports_aging",
    "method": "get",
    "path": "/api/v1/financial/reports/aging",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_reports_analytics",
    "method": "get",
    "path": "/api/v1/financial/reports/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_reports_balance",
    "method": "get",
    "path": "/api/v1/financial/reports/balance",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_tax_calculate",
    "method": "post",
    "path": "/api/v1/financial/tax/calculate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_tax_rates",
    "method": "get",
    "path": "/api/v1/financial/tax/rates",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_transactions",
    "method": "get",
    "path": "/api/v1/financial/transactions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_financial_transactions",
    "method": "post",
    "path": "/api/v1/financial/transactions",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_financial_transactions_id",
    "method": "get",
    "path": "/api/v1/financial/transactions/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_financial_transactions_id",
    "method": "put",
    "path": "/api/v1/financial/transactions/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "financial"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_accounts",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/accounts",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_accounts_mappings",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/accounts/mappings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_integrations_quickbooks_accounts_mappings",
    "method": "put",
    "path": "/api/v1/integrations/quickbooks/accounts/mappings",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_connection_refresh",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/connection/refresh",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_connection_status",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/connection/status",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_connection_test",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/connection/test",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_customers_mappings",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/customers/mappings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_integrations_quickbooks_customers_mappings_mapping_id",
    "method": "delete",
    "path": "/api/v1/integrations/quickbooks/customers/mappings/{mapping_id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_customers_sync",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/customers/sync",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_diagnostics",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/diagnostics",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_health",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/health",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_health_config",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/health/config",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_integrations_quickbooks_health_config",
    "method": "put",
    "path": "/api/v1/integrations/quickbooks/health/config",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_invoices_export",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/invoices/export",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_invoices_import",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/invoices/import",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_items",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/items",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_mappings",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/mappings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_mappings",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/mappings",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_mappings_mapping_id",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/mappings/{mapping_id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_integrations_quickbooks_mappings_mapping_id",
    "method": "put",
    "path": "/api/v1/integrations/quickbooks/mappings/{mapping_id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_integrations_quickbooks_mappings_mapping_id",
    "method": "delete",
    "path": "/api/v1/integrations/quickbooks/mappings/{mapping_id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_oauth_callback",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/oauth/callback",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_integrations_quickbooks_oauth_disconnect",
    "method": "delete",
    "path": "/api/v1/integrations/quickbooks/oauth/disconnect",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_oauth_initiate",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/oauth/initiate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_paymentmethods",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/payment-methods",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_payments_sync",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/payments/sync",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_sync_bulk",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/sync/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_sync_full",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/sync/full",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_sync_history",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/sync/history",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_sync_status",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/sync/status",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_sync_status_sync_id",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/sync/status/{sync_id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_sync_sync_id_cancel",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/sync/{sync_id}/cancel",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_integrations_quickbooks_sync_sync_id_retry",
    "method": "post",
    "path": "/api/v1/integrations/quickbooks/sync/{sync_id}/retry",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_taxcodes",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/tax-codes",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_taxcodes_mappings",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/tax-codes/mappings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_integrations_quickbooks_taxcodes_mappings",
    "method": "put",
    "path": "/api/v1/integrations/quickbooks/tax-codes/mappings",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_integrations_quickbooks_terms",
    "method": "get",
    "path": "/api/v1/integrations/quickbooks/terms",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "integrations"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices",
    "method": "get",
    "path": "/api/v1/invoices",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices",
    "method": "post",
    "path": "/api/v1/invoices",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices_analytics",
    "method": "get",
    "path": "/api/v1/invoices/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_bulk",
    "method": "post",
    "path": "/api/v1/invoices/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_bulk_credit",
    "method": "post",
    "path": "/api/v1/invoices/bulk/credit",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_bulk_delete",
    "method": "post",
    "path": "/api/v1/invoices/bulk/delete",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_bulk_send",
    "method": "post",
    "path": "/api/v1/invoices/bulk/send",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices_export",
    "method": "get",
    "path": "/api/v1/invoices/export",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_generate",
    "method": "post",
    "path": "/api/v1/invoices/generate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_manual",
    "method": "post",
    "path": "/api/v1/invoices/manual",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_preview",
    "method": "post",
    "path": "/api/v1/invoices/preview",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices_recurring",
    "method": "get",
    "path": "/api/v1/invoices/recurring",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_recurring",
    "method": "post",
    "path": "/api/v1/invoices/recurring",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_invoices_recurring_id",
    "method": "put",
    "path": "/api/v1/invoices/recurring/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_invoices_recurring_id",
    "method": "delete",
    "path": "/api/v1/invoices/recurring/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices_search",
    "method": "get",
    "path": "/api/v1/invoices/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices_id",
    "method": "get",
    "path": "/api/v1/invoices/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_invoices_id",
    "method": "put",
    "path": "/api/v1/invoices/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_invoices_id",
    "method": "delete",
    "path": "/api/v1/invoices/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_approve",
    "method": "post",
    "path": "/api/v1/invoices/{id}/approve",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_credit",
    "method": "post",
    "path": "/api/v1/invoices/{id}/credit",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_duplicate",
    "method": "post",
    "path": "/api/v1/invoices/{id}/duplicate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_finalize",
    "method": "post",
    "path": "/api/v1/invoices/{id}/finalize",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices_id_items",
    "method": "get",
    "path": "/api/v1/invoices/{id}/items",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_payment",
    "method": "post",
    "path": "/api/v1/invoices/{id}/payment",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices_id_pdf",
    "method": "get",
    "path": "/api/v1/invoices/{id}/pdf",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_pdf",
    "method": "post",
    "path": "/api/v1/invoices/{id}/pdf",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_reject",
    "method": "post",
    "path": "/api/v1/invoices/{id}/reject",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_send",
    "method": "post",
    "path": "/api/v1/invoices/{id}/send",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_invoices_id_tax",
    "method": "post",
    "path": "/api/v1/invoices/{id}/tax",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_invoices_id_transactions",
    "method": "get",
    "path": "/api/v1/invoices/{id}/transactions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "invoices"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_meta_docs",
    "method": "get",
    "path": "/api/v1/meta/docs",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "meta"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_meta_endpoints",
    "method": "get",
    "path": "/api/v1/meta/endpoints",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "meta"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_meta_health",
    "method": "get",
    "path": "/api/v1/meta/health",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "meta"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_meta_openapi",
    "method": "get",
    "path": "/api/v1/meta/openapi",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "meta"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_meta_permissions",
    "method": "get",
    "path": "/api/v1/meta/permissions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "meta"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_meta_schemas",
    "method": "get",
    "path": "/api/v1/meta/schemas",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "meta"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_meta_sdk",
    "method": "get",
    "path": "/api/v1/meta/sdk",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "meta"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_meta_stats",
    "method": "get",
    "path": "/api/v1/meta/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "meta"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_permissionchecks",
    "method": "post",
    "path": "/api/v1/permission-checks",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "permission-checks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_permissions",
    "method": "get",
    "path": "/api/v1/permissions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "permissions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_permissions",
    "method": "post",
    "path": "/api/v1/permissions",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "permissions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_permissions_categories",
    "method": "get",
    "path": "/api/v1/permissions/categories",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "permissions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_permissions_id",
    "method": "get",
    "path": "/api/v1/permissions/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "permissions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_permissions_id",
    "method": "put",
    "path": "/api/v1/permissions/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "permissions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_permissions_id",
    "method": "delete",
    "path": "/api/v1/permissions/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "permissions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_permissions_id_roles",
    "method": "get",
    "path": "/api/v1/permissions/{id}/roles",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "permissions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_contracts",
    "method": "get",
    "path": "/api/v1/contracts",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contracts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contracts",
    "method": "post",
    "path": "/api/v1/contracts",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contracts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contracts_contractid_contractlines",
    "method": "post",
    "path": "/api/v1/contracts/{contractId}/contract-lines",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contracts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_contracts_contractid_contractlines_contractlineid",
    "method": "delete",
    "path": "/api/v1/contracts/{contractId}/contract-lines/{contractLineId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contracts"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contractlinetemplates",
    "method": "post",
    "path": "/api/v1/contract-line-templates",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-line-templates"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_contractlinetemplates_id_createcontractline",
    "method": "post",
    "path": "/api/v1/contract-line-templates/{id}/create-contract-line",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "contract-line-templates"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects",
    "method": "get",
    "path": "/api/v1/projects",
    "displayName": "List Projects",
    "summary": "List projects",
    "description": "Returns a paginated list of projects for the current tenant. Supports filtering by client, status, assignment, and name.",
    "tags": [
      "Projects"
    ],
    "rbacResource": "project",
    "approvalRequired": true,
    "parameters": [
      {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "Pagination page number (default 1).",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Pagination size (max 100, default 25).",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      },
      {
        "name": "sort",
        "in": "query",
        "required": false,
        "description": "Sort field (default created_at).",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "order",
        "in": "query",
        "required": false,
        "description": "Sort direction asc or desc (default desc).",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      },
      {
        "name": "project_name",
        "in": "query",
        "required": false,
        "description": "Filter by project name (partial match).",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "client_id",
        "in": "query",
        "required": false,
        "description": "Filter by client identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "status",
        "in": "query",
        "required": false,
        "description": "Filter by project status identifier or key.",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "assigned_to",
        "in": "query",
        "required": false,
        "description": "Filter by assigned user identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "is_inactive",
        "in": "query",
        "required": false,
        "description": "When true, include inactive projects.",
        "schema": {
          "type": "boolean"
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "project_id": {
                "type": "string",
                "format": "uuid"
              },
              "client_id": {
                "type": "string",
                "format": "uuid"
              },
              "project_name": {
                "type": "string"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "start_date": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "end_date": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "wbs_code": {
                "type": "string"
              },
              "is_inactive": {
                "type": "boolean"
              },
              "status": {
                "type": "string"
              },
              "assigned_to": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "contact_name_id": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "budgeted_hours": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "tenant": {
                "type": "string",
                "format": "uuid"
              },
              "client_name": {
                "type": "string"
              },
              "status_name": {
                "type": "string"
              },
              "is_closed": {
                "type": "boolean"
              },
              "contact_name": {
                "type": "string"
              }
            },
            "required": [
              "project_id",
              "client_id",
              "project_name",
              "created_at",
              "updated_at",
              "wbs_code",
              "is_inactive",
              "status",
              "tenant"
            ]
          }
        },
        "pagination": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer"
            },
            "limit": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            },
            "totalPages": {
              "type": "integer"
            },
            "hasNext": {
              "type": "boolean"
            },
            "hasPrev": {
              "type": "boolean"
            }
          }
        },
        "meta": {
          "type": "object"
        }
      }
    },
    "playbooks": [
      "projects/list-basic"
    ],
    "examples": [
      {
        "name": "List active projects",
        "request": {
          "query": {
            "is_inactive": false,
            "limit": 10
          }
        },
        "notes": "Returns the first 10 active projects ordered by creation date."
      }
    ]
  },
  {
    "id": "post-_api_v1_projects",
    "method": "post",
    "path": "/api/v1/projects",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_projects_bulkassign",
    "method": "put",
    "path": "/api/v1/projects/bulk-assign",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_projects_bulkstatus",
    "method": "put",
    "path": "/api/v1/projects/bulk-status",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_projects_bulkupdate",
    "method": "put",
    "path": "/api/v1/projects/bulk-update",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_export",
    "method": "get",
    "path": "/api/v1/projects/export",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_search",
    "method": "get",
    "path": "/api/v1/projects/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_stats",
    "method": "get",
    "path": "/api/v1/projects/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_tasks_taskid",
    "method": "get",
    "path": "/api/v1/projects/tasks/{taskId}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_projects_tasks_taskid",
    "method": "put",
    "path": "/api/v1/projects/tasks/{taskId}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_projects_tasks_taskid",
    "method": "delete",
    "path": "/api/v1/projects/tasks/{taskId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_tasks_taskid_checklist",
    "method": "get",
    "path": "/api/v1/projects/tasks/{taskId}/checklist",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_projects_tasks_taskid_checklist",
    "method": "post",
    "path": "/api/v1/projects/tasks/{taskId}/checklist",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_id",
    "method": "get",
    "path": "/api/v1/projects/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_projects_id",
    "method": "put",
    "path": "/api/v1/projects/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_projects_id",
    "method": "delete",
    "path": "/api/v1/projects/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_id_phases",
    "method": "get",
    "path": "/api/v1/projects/{id}/phases",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_projects_id_phases",
    "method": "post",
    "path": "/api/v1/projects/{id}/phases",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_projects_id_phases_phaseid",
    "method": "put",
    "path": "/api/v1/projects/{id}/phases/{phaseId}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_projects_id_phases_phaseid",
    "method": "delete",
    "path": "/api/v1/projects/{id}/phases/{phaseId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_id_phases_phaseid_tasks",
    "method": "get",
    "path": "/api/v1/projects/{id}/phases/{phaseId}/tasks",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_id_tasks",
    "method": "get",
    "path": "/api/v1/projects/{id}/tasks",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_projects_id_tickets",
    "method": "get",
    "path": "/api/v1/projects/{id}/tickets",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "projects"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_accounts",
    "method": "get",
    "path": "/api/v1/quickbooks/accounts",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_accounts_mappings",
    "method": "get",
    "path": "/api/v1/quickbooks/accounts/mappings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_quickbooks_accounts_mappings",
    "method": "put",
    "path": "/api/v1/quickbooks/accounts/mappings",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_connection_refresh",
    "method": "post",
    "path": "/api/v1/quickbooks/connection/refresh",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_connection_status",
    "method": "get",
    "path": "/api/v1/quickbooks/connection/status",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_connection_test",
    "method": "post",
    "path": "/api/v1/quickbooks/connection/test",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_customers_mappings",
    "method": "get",
    "path": "/api/v1/quickbooks/customers/mappings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_quickbooks_customers_mappings_mapping_id",
    "method": "delete",
    "path": "/api/v1/quickbooks/customers/mappings/{mapping_id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_customers_sync",
    "method": "post",
    "path": "/api/v1/quickbooks/customers/sync",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_diagnostics",
    "method": "post",
    "path": "/api/v1/quickbooks/diagnostics",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_health",
    "method": "get",
    "path": "/api/v1/quickbooks/health",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_health_config",
    "method": "get",
    "path": "/api/v1/quickbooks/health/config",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_quickbooks_health_config",
    "method": "put",
    "path": "/api/v1/quickbooks/health/config",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_invoices_export",
    "method": "post",
    "path": "/api/v1/quickbooks/invoices/export",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_invoices_import",
    "method": "post",
    "path": "/api/v1/quickbooks/invoices/import",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_items",
    "method": "get",
    "path": "/api/v1/quickbooks/items",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_mappings",
    "method": "get",
    "path": "/api/v1/quickbooks/mappings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_mappings",
    "method": "post",
    "path": "/api/v1/quickbooks/mappings",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_mappings_mapping_id",
    "method": "get",
    "path": "/api/v1/quickbooks/mappings/{mapping_id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_quickbooks_mappings_mapping_id",
    "method": "put",
    "path": "/api/v1/quickbooks/mappings/{mapping_id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_quickbooks_mappings_mapping_id",
    "method": "delete",
    "path": "/api/v1/quickbooks/mappings/{mapping_id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_oauth_callback",
    "method": "post",
    "path": "/api/v1/quickbooks/oauth/callback",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_quickbooks_oauth_disconnect",
    "method": "delete",
    "path": "/api/v1/quickbooks/oauth/disconnect",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_oauth_initiate",
    "method": "post",
    "path": "/api/v1/quickbooks/oauth/initiate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_paymentmethods",
    "method": "get",
    "path": "/api/v1/quickbooks/payment-methods",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_payments_sync",
    "method": "post",
    "path": "/api/v1/quickbooks/payments/sync",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_sync_bulk",
    "method": "post",
    "path": "/api/v1/quickbooks/sync/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_sync_full",
    "method": "post",
    "path": "/api/v1/quickbooks/sync/full",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_sync_history",
    "method": "get",
    "path": "/api/v1/quickbooks/sync/history",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_sync_status",
    "method": "get",
    "path": "/api/v1/quickbooks/sync/status",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_sync_status_sync_id",
    "method": "get",
    "path": "/api/v1/quickbooks/sync/status/{sync_id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_sync_sync_id_cancel",
    "method": "post",
    "path": "/api/v1/quickbooks/sync/{sync_id}/cancel",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_quickbooks_sync_sync_id_retry",
    "method": "post",
    "path": "/api/v1/quickbooks/sync/{sync_id}/retry",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_taxcodes",
    "method": "get",
    "path": "/api/v1/quickbooks/tax-codes",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_taxcodes_mappings",
    "method": "get",
    "path": "/api/v1/quickbooks/tax-codes/mappings",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_quickbooks_taxcodes_mappings",
    "method": "put",
    "path": "/api/v1/quickbooks/tax-codes/mappings",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_quickbooks_terms",
    "method": "get",
    "path": "/api/v1/quickbooks/terms",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "quickbooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_rbac_analytics",
    "method": "get",
    "path": "/api/v1/rbac/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "rbac"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_rbac_audit",
    "method": "get",
    "path": "/api/v1/rbac/audit",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "rbac"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_roles",
    "method": "get",
    "path": "/api/v1/roles",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_roles",
    "method": "post",
    "path": "/api/v1/roles",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_roles_bulk",
    "method": "post",
    "path": "/api/v1/roles/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_roles_templates",
    "method": "get",
    "path": "/api/v1/roles/templates",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_roles_id",
    "method": "get",
    "path": "/api/v1/roles/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_roles_id",
    "method": "put",
    "path": "/api/v1/roles/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_roles_id",
    "method": "delete",
    "path": "/api/v1/roles/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_roles_id_clone",
    "method": "post",
    "path": "/api/v1/roles/{id}/clone",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_roles_id_permissions",
    "method": "get",
    "path": "/api/v1/roles/{id}/permissions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_roles_id_permissions",
    "method": "put",
    "path": "/api/v1/roles/{id}/permissions",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_schedules",
    "method": "get",
    "path": "/api/v1/schedules",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "schedules"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_schedules",
    "method": "post",
    "path": "/api/v1/schedules",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "schedules"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_schedules_search",
    "method": "get",
    "path": "/api/v1/schedules/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "schedules"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_schedules_id",
    "method": "get",
    "path": "/api/v1/schedules/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "schedules"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_schedules_id",
    "method": "put",
    "path": "/api/v1/schedules/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "schedules"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_schedules_id",
    "method": "delete",
    "path": "/api/v1/schedules/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "schedules"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_schedules_id_conflicts",
    "method": "get",
    "path": "/api/v1/schedules/{id}/conflicts",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "schedules"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tags",
    "method": "get",
    "path": "/api/v1/tags",
    "displayName": "List Tags",
    "summary": "Fetch tag catalog",
    "description": "Returns tags configured for the tenant. Reuse these when populating the tags array for a ticket.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "entity_type",
        "in": "query",
        "required": false,
        "description": "Limit results to tags used for a specific entity type (e.g., ticket).",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Number of tags per page (default 25, max 200).",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    },
    "examples": [
      {
        "name": "Retrieve ticket tags",
        "request": {
          "query": {
            "entity_type": "ticket",
            "limit": 25
          }
        },
        "notes": "Use existing tag names whenever possible rather than inventing new ones."
      }
    ]
  },
  {
    "id": "post-_api_v1_tags",
    "method": "post",
    "path": "/api/v1/tags",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tags_analytics",
    "method": "get",
    "path": "/api/v1/tags/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_tags_bulk",
    "method": "post",
    "path": "/api/v1/tags/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_tags_bulk",
    "method": "delete",
    "path": "/api/v1/tags/bulk",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_tags_bulk_merge",
    "method": "post",
    "path": "/api/v1/tags/bulk/merge",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_tags_bulk_tag",
    "method": "post",
    "path": "/api/v1/tags/bulk/tag",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_tags_bulk_untag",
    "method": "delete",
    "path": "/api/v1/tags/bulk/untag",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_tags_bytext",
    "method": "delete",
    "path": "/api/v1/tags/by-text",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tags_cloud",
    "method": "get",
    "path": "/api/v1/tags/cloud",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tags_entity_entitytype_entityid",
    "method": "get",
    "path": "/api/v1/tags/entity/{entityType}/{entityId}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_tags_entity_entitytype_entityid",
    "method": "post",
    "path": "/api/v1/tags/entity/{entityType}/{entityId}",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_tags_entity_entitytype_entityid",
    "method": "delete",
    "path": "/api/v1/tags/entity/{entityType}/{entityId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tags_search",
    "method": "get",
    "path": "/api/v1/tags/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tags_id",
    "method": "get",
    "path": "/api/v1/tags/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_tags_id",
    "method": "put",
    "path": "/api/v1/tags/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_tags_id",
    "method": "delete",
    "path": "/api/v1/tags/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_tags_id_colors",
    "method": "put",
    "path": "/api/v1/tags/{id}/colors",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_tags_id_text",
    "method": "put",
    "path": "/api/v1/tags/{id}/text",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tags"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams",
    "method": "get",
    "path": "/api/v1/teams",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_teams",
    "method": "post",
    "path": "/api/v1/teams",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_teams_bulk",
    "method": "put",
    "path": "/api/v1/teams/bulk",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_teams_bulk",
    "method": "delete",
    "path": "/api/v1/teams/bulk",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams_hierarchy",
    "method": "get",
    "path": "/api/v1/teams/hierarchy",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams_search",
    "method": "get",
    "path": "/api/v1/teams/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams_stats",
    "method": "get",
    "path": "/api/v1/teams/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams_id",
    "method": "get",
    "path": "/api/v1/teams/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_teams_id",
    "method": "put",
    "path": "/api/v1/teams/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_teams_id",
    "method": "delete",
    "path": "/api/v1/teams/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams_id_analytics",
    "method": "get",
    "path": "/api/v1/teams/{id}/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_teams_id_hierarchy",
    "method": "post",
    "path": "/api/v1/teams/{id}/hierarchy",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_teams_id_hierarchy",
    "method": "delete",
    "path": "/api/v1/teams/{id}/hierarchy",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_teams_id_manager",
    "method": "put",
    "path": "/api/v1/teams/{id}/manager",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams_id_members",
    "method": "get",
    "path": "/api/v1/teams/{id}/members",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_teams_id_members",
    "method": "post",
    "path": "/api/v1/teams/{id}/members",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_teams_id_members_bulk",
    "method": "post",
    "path": "/api/v1/teams/{id}/members/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_teams_id_members_userid",
    "method": "delete",
    "path": "/api/v1/teams/{id}/members/{userId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams_id_permissions",
    "method": "get",
    "path": "/api/v1/teams/{id}/permissions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_teams_id_permissions",
    "method": "post",
    "path": "/api/v1/teams/{id}/permissions",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_teams_id_permissions_permissionid",
    "method": "delete",
    "path": "/api/v1/teams/{id}/permissions/{permissionId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_teams_id_projects",
    "method": "get",
    "path": "/api/v1/teams/{id}/projects",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "teams"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_testauth",
    "method": "get",
    "path": "/api/v1/test-auth",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "test-auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tickets",
    "method": "get",
    "path": "/api/v1/tickets",
    "displayName": "List Tickets",
    "summary": "List tickets",
    "description": "Returns a paginated list of tickets for the current tenant. Use this both for reporting and to sample existing board_id, status_id, priority_id, and assigned_to values before creating a new ticket.",
    "tags": [
      "tickets"
    ],
    "rbacResource": "ticket",
    "approvalRequired": false,
    "parameters": [
      {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "Pagination page number (default 1).",
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Number of tickets per page (max 100, default 25).",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      },
      {
        "name": "board_id",
        "in": "query",
        "required": false,
        "description": "Filter to a specific board.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "status_id",
        "in": "query",
        "required": false,
        "description": "Filter by ticket status.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "assigned_to",
        "in": "query",
        "required": false,
        "description": "Filter tickets assigned to a specific technician.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "client_id",
        "in": "query",
        "required": false,
        "description": "Filter by client identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "is_open",
        "in": "query",
        "required": false,
        "description": "When true, only open tickets are returned.",
        "schema": {
          "type": "boolean"
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ticket_id": {
                "type": "string",
                "format": "uuid"
              },
              "ticket_number": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "client_id": {
                "type": "string",
                "format": "uuid"
              },
              "board_id": {
                "type": "string",
                "format": "uuid"
              },
              "status_id": {
                "type": "string",
                "format": "uuid"
              },
              "priority_id": {
                "type": "string",
                "format": "uuid"
              },
              "assigned_to": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "entered_at": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "ticket_id",
              "ticket_number",
              "title",
              "client_id",
              "board_id",
              "status_id",
              "priority_id",
              "entered_at"
            ]
          }
        },
        "pagination": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer"
            },
            "limit": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            },
            "totalPages": {
              "type": "integer"
            },
            "hasNext": {
              "type": "boolean"
            },
            "hasPrev": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "examples": [
      {
        "name": "Sample recent tickets for reference data",
        "request": {
          "query": {
            "limit": 5,
            "is_open": true
          }
        },
        "notes": "Inspect the response payload to reuse board_id, status_id, priority_id, and assigned_to values that are known to be valid. If you only need a single set of identifiers, take the first ticket in the data array that has non-null board_id, status_id, and priority_id and reuse those UUIDs for the new ticket."
      }
    ]
  },
  {
    "id": "post-_api_v1_tickets",
    "method": "post",
    "path": "/api/v1/tickets",
    "displayName": "Create Ticket",
    "summary": "Create a new ticket",
    "description": "Creates a new ticket on a specified board with the desired status and priority. Requires the user to have ticket create permissions. Do not invoke this until you have gathered valid UUIDs for board_id, client_id, status_id, and priority_id from prior lookup calls.",
    "tags": [
      "tickets"
    ],
    "rbacResource": "ticket",
    "approvalRequired": true,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Ticket subject line."
        },
        "board_id": {
          "type": "string",
          "format": "uuid",
          "description": "Ticket board identifier. If you do not already know an active board_id, call GET /api/v1/tickets?limit=5 to sample existing tickets and reuse a board_id that is valid for this tenant. Always provide the UUID, never the board name, slug, or display label."
        },
        "client_id": {
          "type": "string",
          "format": "uuid",
          "description": "Owning client identifier. Retrieve clients via GET /api/v1/clients (supporting filters such as name or status) to resolve the correct client_id, and provide that UUID in the payload (do not send the client name)."
        },
        "status_id": {
          "type": "string",
          "format": "uuid",
          "description": "Initial ticket status identifier. Sample existing tickets via GET /api/v1/tickets?limit=5 to collect a valid status_id and send that UUID (do not send a status label like \"Open\" or a field named \"status\")."
        },
        "priority_id": {
          "type": "string",
          "format": "uuid",
          "description": "Ticket priority identifier. Sample existing tickets with GET /api/v1/tickets?limit=5 to obtain a valid priority_id and include the UUID (never send fields named \"priority\" or the textual priority name)."
        },
        "contact_name_id": {
          "type": "string",
          "format": "uuid",
          "nullable": true,
          "description": "Primary contact for this ticket. Look up contacts through GET /api/v1/contacts (optionally filter by client_id) before supplying this reference."
        },
        "location_id": {
          "type": "string",
          "format": "uuid",
          "nullable": true,
          "description": "Client location identifier. Call GET /api/v1/clients/{client_id}/locations to enumerate valid locations for the chosen client."
        },
        "category_id": {
          "type": "string",
          "format": "uuid",
          "nullable": true,
          "description": "Ticket category identifier. Fetch categories via GET /api/v1/categories/ticket (filter by board_id if necessary) to resolve the correct category_id."
        },
        "subcategory_id": {
          "type": "string",
          "format": "uuid",
          "nullable": true,
          "description": "Ticket subcategory identifier. After retrieving the category list or tree (GET /api/v1/categories/ticket or GET /api/v1/categories/ticket/tree/{board_id}), choose the desired subcategory_id."
        },
        "assigned_to": {
          "type": "string",
          "format": "uuid",
          "nullable": true,
          "description": "Technician assignment. Use GET /api/v1/users (filtering by role, team, or name) to acquire the user_id of the assignee and submit that UUID."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "nullable": true
        },
        "attributes": {
          "type": "object",
          "additionalProperties": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional labels to associate with the ticket. Discover existing tag values via GET /api/v1/tags or GET /api/v1/tags/search before reusing them."
        }
      },
      "required": [
        "title",
        "board_id",
        "client_id",
        "status_id",
        "priority_id"
      ]
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "ticket_id": {
              "type": "string",
              "format": "uuid"
            },
            "ticket_number": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "status_id": {
              "type": "string",
              "format": "uuid"
            },
            "priority_id": {
              "type": "string",
              "format": "uuid"
            },
            "board_id": {
              "type": "string",
              "format": "uuid"
            },
            "client_id": {
              "type": "string",
              "format": "uuid"
            },
            "assigned_to": {
              "type": [
                "string",
                "null"
              ],
              "format": "uuid"
            }
          },
          "required": [
            "ticket_id",
            "ticket_number",
            "title",
            "status_id",
            "priority_id",
            "board_id",
            "client_id"
          ]
        }
      }
    },
    "examples": [
      {
        "name": "Create ticket example",
        "request": {
          "body": {
            "title": "Printer offline at HQ",
            "board_id": "11111111-1111-1111-1111-111111111111",
            "client_id": "22222222-2222-2222-2222-222222222222",
            "status_id": "33333333-3333-3333-3333-333333333333",
            "priority_id": "44444444-4444-4444-4444-444444444444",
            "contact_name_id": "55555555-5555-5555-5555-555555555555"
          }
        },
        "notes": "Before calling this endpoint, resolve every referenced identifier by invoking the appropriate lookup APIs. For example, call GET /api/v1/clients to choose client_id, GET /api/v1/contacts?client_id=... for contact_name_id, GET /api/v1/clients/{client_id}/locations for location_id, GET /api/v1/categories/ticket for category/subcategory options, GET /api/v1/users to select the assignee, GET /api/v1/tags to reuse tag names, and GET /api/v1/tickets?limit=5 to sample valid board_id, status_id, and priority_id values already in use. Always send the UUID fields exactly as documented—do not substitute human-readable names such as \"High\" or \"In Progress,\" and do not introduce extra fields that are not part of this schema (e.g., project_id or priority). If the user supplies labels, translate them to *_id values and omit the original textual fields. When sampling tickets for IDs, it is acceptable to reuse the first ticket record that contains non-null values for board_id, status_id, and priority_id."
      }
    ]
  },
  {
    "id": "post-_api_v1_tickets_fromasset",
    "method": "post",
    "path": "/api/v1/tickets/from-asset",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tickets_search",
    "method": "get",
    "path": "/api/v1/tickets/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tickets_stats",
    "method": "get",
    "path": "/api/v1/tickets/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tickets_id",
    "method": "get",
    "path": "/api/v1/tickets/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_tickets_id",
    "method": "put",
    "path": "/api/v1/tickets/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_tickets_id",
    "method": "delete",
    "path": "/api/v1/tickets/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_tickets_id_assignment",
    "method": "put",
    "path": "/api/v1/tickets/{id}/assignment",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_tickets_id_comments",
    "method": "get",
    "path": "/api/v1/tickets/{id}/comments",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_tickets_id_comments",
    "method": "post",
    "path": "/api/v1/tickets/{id}/comments",
    "displayName": "Add Ticket Comment",
    "summary": "Add a comment to a ticket",
    "description": "Adds a client or internal comment to the specified ticket.",
    "tags": [
      "tickets"
    ],
    "rbacResource": "ticket",
    "approvalRequired": true,
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Ticket identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    ],
    "requestBodySchema": {
      "type": "object",
      "properties": {
        "comment_text": {
          "type": "string",
          "description": "Comment body text."
        },
        "is_internal": {
          "type": "boolean",
          "description": "When true, records the comment as internal only.",
          "default": false
        },
        "time_spent": {
          "type": "number",
          "description": "Optional time (in minutes) to log with the comment.",
          "minimum": 0
        }
      },
      "required": [
        "comment_text"
      ]
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_tickets_id_status",
    "method": "put",
    "path": "/api/v1/tickets/{id}/status",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "tickets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeentries",
    "method": "get",
    "path": "/api/v1/time-entries",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeentries",
    "method": "post",
    "path": "/api/v1/time-entries",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeentries_activesession",
    "method": "get",
    "path": "/api/v1/time-entries/active-session",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeentries_approve",
    "method": "post",
    "path": "/api/v1/time-entries/approve",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeentries_bulk",
    "method": "post",
    "path": "/api/v1/time-entries/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_timeentries_bulk",
    "method": "put",
    "path": "/api/v1/time-entries/bulk",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_timeentries_bulk",
    "method": "delete",
    "path": "/api/v1/time-entries/bulk",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeentries_export",
    "method": "get",
    "path": "/api/v1/time-entries/export",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeentries_requestchanges",
    "method": "post",
    "path": "/api/v1/time-entries/request-changes",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeentries_search",
    "method": "get",
    "path": "/api/v1/time-entries/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeentries_starttracking",
    "method": "post",
    "path": "/api/v1/time-entries/start-tracking",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeentries_stats",
    "method": "get",
    "path": "/api/v1/time-entries/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeentries_stoptracking_sessionid",
    "method": "post",
    "path": "/api/v1/time-entries/stop-tracking/{sessionId}",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeentries_templates",
    "method": "get",
    "path": "/api/v1/time-entries/templates",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeentries_id",
    "method": "get",
    "path": "/api/v1/time-entries/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_timeentries_id",
    "method": "put",
    "path": "/api/v1/time-entries/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_timeentries_id",
    "method": "delete",
    "path": "/api/v1/time-entries/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-entries"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeperiods",
    "method": "get",
    "path": "/api/v1/time-periods",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-periods"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeperiods",
    "method": "post",
    "path": "/api/v1/time-periods",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-periods"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeperiods_current",
    "method": "get",
    "path": "/api/v1/time-periods/current",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-periods"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timeperiods_id",
    "method": "get",
    "path": "/api/v1/time-periods/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-periods"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_timeperiods_id",
    "method": "put",
    "path": "/api/v1/time-periods/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-periods"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_timeperiods_id",
    "method": "delete",
    "path": "/api/v1/time-periods/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-periods"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeperiods_id_close",
    "method": "post",
    "path": "/api/v1/time-periods/{id}/close",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-periods"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timeperiods_id_reopen",
    "method": "post",
    "path": "/api/v1/time-periods/{id}/reopen",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-periods"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timesheets",
    "method": "get",
    "path": "/api/v1/time-sheets",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timesheets",
    "method": "post",
    "path": "/api/v1/time-sheets",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timesheets_bulk",
    "method": "post",
    "path": "/api/v1/time-sheets/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timesheets_export",
    "method": "get",
    "path": "/api/v1/time-sheets/export",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timesheets_search",
    "method": "get",
    "path": "/api/v1/time-sheets/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timesheets_id",
    "method": "get",
    "path": "/api/v1/time-sheets/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_timesheets_id",
    "method": "put",
    "path": "/api/v1/time-sheets/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_timesheets_id",
    "method": "delete",
    "path": "/api/v1/time-sheets/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timesheets_id_addentry",
    "method": "post",
    "path": "/api/v1/time-sheets/{id}/add-entry",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timesheets_id_approve",
    "method": "post",
    "path": "/api/v1/time-sheets/{id}/approve",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timesheets_id_entries",
    "method": "get",
    "path": "/api/v1/time-sheets/{id}/entries",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timesheets_id_reject",
    "method": "post",
    "path": "/api/v1/time-sheets/{id}/reject",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_timesheets_id_removeentry",
    "method": "delete",
    "path": "/api/v1/time-sheets/{id}/remove-entry",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timesheets_id_requestchanges",
    "method": "post",
    "path": "/api/v1/time-sheets/{id}/request-changes",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timesheets_id_reverseapproval",
    "method": "post",
    "path": "/api/v1/time-sheets/{id}/reverse-approval",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_timesheets_id_submit",
    "method": "post",
    "path": "/api/v1/time-sheets/{id}/submit",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_timesheets_id_summary",
    "method": "get",
    "path": "/api/v1/time-sheets/{id}/summary",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "time-sheets"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_userroles",
    "method": "get",
    "path": "/api/v1/user-roles",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "user-roles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_user_telemetrydecision",
    "method": "get",
    "path": "/api/v1/user/telemetry-decision",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "user"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_user_telemetrypreferences",
    "method": "get",
    "path": "/api/v1/user/telemetry-preferences",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "user"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_user_telemetrypreferences",
    "method": "post",
    "path": "/api/v1/user/telemetry-preferences",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "user"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_user_telemetrypreferences",
    "method": "delete",
    "path": "/api/v1/user/telemetry-preferences",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "user"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users",
    "method": "get",
    "path": "/api/v1/users",
    "displayName": "List Users",
    "summary": "Fetch users/technicians",
    "description": "Lists tenant users. Use this to discover the user_id for the assignee field on a ticket.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "search_term",
        "in": "query",
        "required": false,
        "description": "Match against name or email.",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "team_id",
        "in": "query",
        "required": false,
        "description": "Filter users belonging to a specific team.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Number of users per page (default 25, max 100).",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    },
    "examples": [
      {
        "name": "Find a technician",
        "request": {
          "query": {
            "search_term": "Samantha",
            "limit": 5
          }
        },
        "notes": "Use the result set to map the human name back to a user_id for the assigned_to field."
      }
    ]
  },
  {
    "id": "post-_api_v1_users",
    "method": "post",
    "path": "/api/v1/users",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_activity",
    "method": "get",
    "path": "/api/v1/users/activity",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_users_bulk_create",
    "method": "post",
    "path": "/api/v1/users/bulk/create",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_users_bulk_deactivate",
    "method": "put",
    "path": "/api/v1/users/bulk/deactivate",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_search",
    "method": "get",
    "path": "/api/v1/users/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_stats",
    "method": "get",
    "path": "/api/v1/users/stats",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_id",
    "method": "get",
    "path": "/api/v1/users/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_users_id",
    "method": "put",
    "path": "/api/v1/users/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_users_id",
    "method": "delete",
    "path": "/api/v1/users/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_users_id_2fa_disable",
    "method": "delete",
    "path": "/api/v1/users/{id}/2fa/disable",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_users_id_2fa_enable",
    "method": "post",
    "path": "/api/v1/users/{id}/2fa/enable",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_id_activity",
    "method": "get",
    "path": "/api/v1/users/{id}/activity",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_users_id_avatar",
    "method": "post",
    "path": "/api/v1/users/{id}/avatar",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_users_id_avatar",
    "method": "delete",
    "path": "/api/v1/users/{id}/avatar",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_users_id_password",
    "method": "put",
    "path": "/api/v1/users/{id}/password",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_id_permissions",
    "method": "get",
    "path": "/api/v1/users/{id}/permissions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_id_preferences",
    "method": "get",
    "path": "/api/v1/users/{id}/preferences",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_users_id_preferences",
    "method": "put",
    "path": "/api/v1/users/{id}/preferences",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_id_roles",
    "method": "get",
    "path": "/api/v1/users/{id}/roles",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_users_id_roles",
    "method": "post",
    "path": "/api/v1/users/{id}/roles",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_users_id_roles",
    "method": "put",
    "path": "/api/v1/users/{id}/roles",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_users_id_roles",
    "method": "delete",
    "path": "/api/v1/users/{id}/roles",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_users_id_teams",
    "method": "get",
    "path": "/api/v1/users/{id}/teams",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_users_id_teams",
    "method": "post",
    "path": "/api/v1/users/{id}/teams",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_users_id_teams_teamid",
    "method": "delete",
    "path": "/api/v1/users/{id}/teams/{teamId}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "users"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks",
    "method": "get",
    "path": "/api/v1/webhooks",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks",
    "method": "post",
    "path": "/api/v1/webhooks",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_analytics",
    "method": "get",
    "path": "/api/v1/webhooks/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_bulk",
    "method": "post",
    "path": "/api/v1/webhooks/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_events",
    "method": "get",
    "path": "/api/v1/webhooks/events",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_events_trigger",
    "method": "post",
    "path": "/api/v1/webhooks/events/trigger",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_export",
    "method": "get",
    "path": "/api/v1/webhooks/export",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_filter_test",
    "method": "post",
    "path": "/api/v1/webhooks/filter/test",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_health",
    "method": "get",
    "path": "/api/v1/webhooks/health",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_search",
    "method": "get",
    "path": "/api/v1/webhooks/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_subscriptions",
    "method": "get",
    "path": "/api/v1/webhooks/subscriptions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_subscriptions",
    "method": "post",
    "path": "/api/v1/webhooks/subscriptions",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_templates",
    "method": "get",
    "path": "/api/v1/webhooks/templates",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_templates",
    "method": "post",
    "path": "/api/v1/webhooks/templates",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_templates_id",
    "method": "get",
    "path": "/api/v1/webhooks/templates/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_webhooks_templates_id",
    "method": "put",
    "path": "/api/v1/webhooks/templates/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_webhooks_templates_id",
    "method": "delete",
    "path": "/api/v1/webhooks/templates/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_templates_id_create",
    "method": "post",
    "path": "/api/v1/webhooks/templates/{id}/create",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_test",
    "method": "post",
    "path": "/api/v1/webhooks/test",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_transform_test",
    "method": "post",
    "path": "/api/v1/webhooks/transform/test",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_validate",
    "method": "post",
    "path": "/api/v1/webhooks/validate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_verify",
    "method": "post",
    "path": "/api/v1/webhooks/verify",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_id",
    "method": "get",
    "path": "/api/v1/webhooks/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_webhooks_id",
    "method": "put",
    "path": "/api/v1/webhooks/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_webhooks_id",
    "method": "delete",
    "path": "/api/v1/webhooks/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_id_analytics",
    "method": "get",
    "path": "/api/v1/webhooks/{id}/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_id_deliveries",
    "method": "get",
    "path": "/api/v1/webhooks/{id}/deliveries",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_id_deliveries_delivery_id",
    "method": "get",
    "path": "/api/v1/webhooks/{id}/deliveries/{delivery_id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_id_deliveries_delivery_id_retry",
    "method": "post",
    "path": "/api/v1/webhooks/{id}/deliveries/{delivery_id}/retry",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_id_filter_test",
    "method": "post",
    "path": "/api/v1/webhooks/{id}/filter/test",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_id_health",
    "method": "get",
    "path": "/api/v1/webhooks/{id}/health",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_id_secret_rotate",
    "method": "post",
    "path": "/api/v1/webhooks/{id}/secret/rotate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_webhooks_id_subscriptions",
    "method": "get",
    "path": "/api/v1/webhooks/{id}/subscriptions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_id_subscriptions",
    "method": "post",
    "path": "/api/v1/webhooks/{id}/subscriptions",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_id_test",
    "method": "post",
    "path": "/api/v1/webhooks/{id}/test",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_id_transform_test",
    "method": "post",
    "path": "/api/v1/webhooks/{id}/transform/test",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_webhooks_id_validate",
    "method": "post",
    "path": "/api/v1/webhooks/{id}/validate",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "webhooks"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows",
    "method": "get",
    "path": "/api/v1/workflows",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows",
    "method": "post",
    "path": "/api/v1/workflows",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_analytics",
    "method": "get",
    "path": "/api/v1/workflows/analytics",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_events",
    "method": "get",
    "path": "/api/v1/workflows/events",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_events",
    "method": "post",
    "path": "/api/v1/workflows/events",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_events_id",
    "method": "get",
    "path": "/api/v1/workflows/events/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_executions",
    "method": "get",
    "path": "/api/v1/workflows/executions",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_executions",
    "method": "post",
    "path": "/api/v1/workflows/executions",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_executions_bulk",
    "method": "post",
    "path": "/api/v1/workflows/executions/bulk",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_executions_bulkaction",
    "method": "post",
    "path": "/api/v1/workflows/executions/bulk-action",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_executions_id",
    "method": "get",
    "path": "/api/v1/workflows/executions/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_workflows_executions_id",
    "method": "put",
    "path": "/api/v1/workflows/executions/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_executions_id_cancel",
    "method": "post",
    "path": "/api/v1/workflows/executions/{id}/cancel",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_executions_id_pause",
    "method": "post",
    "path": "/api/v1/workflows/executions/{id}/pause",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_executions_id_restart",
    "method": "post",
    "path": "/api/v1/workflows/executions/{id}/restart",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_executions_id_resume",
    "method": "post",
    "path": "/api/v1/workflows/executions/{id}/resume",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_export",
    "method": "get",
    "path": "/api/v1/workflows/export",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_import",
    "method": "post",
    "path": "/api/v1/workflows/import",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_search",
    "method": "get",
    "path": "/api/v1/workflows/search",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_tasks",
    "method": "get",
    "path": "/api/v1/workflows/tasks",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_tasks",
    "method": "post",
    "path": "/api/v1/workflows/tasks",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_tasks_bulkassign",
    "method": "post",
    "path": "/api/v1/workflows/tasks/bulk-assign",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_tasks_id",
    "method": "get",
    "path": "/api/v1/workflows/tasks/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_workflows_tasks_id",
    "method": "put",
    "path": "/api/v1/workflows/tasks/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_tasks_id_claim",
    "method": "post",
    "path": "/api/v1/workflows/tasks/{id}/claim",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_tasks_id_complete",
    "method": "post",
    "path": "/api/v1/workflows/tasks/{id}/complete",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_templates",
    "method": "get",
    "path": "/api/v1/workflows/templates",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_workflows_templates",
    "method": "post",
    "path": "/api/v1/workflows/templates",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_templates_id",
    "method": "get",
    "path": "/api/v1/workflows/templates/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_workflows_templates_id",
    "method": "put",
    "path": "/api/v1/workflows/templates/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_workflows_templates_id",
    "method": "delete",
    "path": "/api/v1/workflows/templates/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_v1_workflows_id",
    "method": "get",
    "path": "/api/v1/workflows/{id}",
    "displayName": "GET v1",
    "summary": "GET v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "put-_api_v1_workflows_id",
    "method": "put",
    "path": "/api/v1/workflows/{id}",
    "displayName": "PUT v1",
    "summary": "PUT v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "delete-_api_v1_workflows_id",
    "method": "delete",
    "path": "/api/v1/workflows/{id}",
    "displayName": "DELETE v1",
    "summary": "DELETE v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "workflows"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_extbundles_abort",
    "method": "post",
    "path": "/api/ext-bundles/abort",
    "displayName": "POST ext-bundles",
    "summary": "POST ext-bundles",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "ext-bundles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_extbundles_finalize",
    "method": "post",
    "path": "/api/ext-bundles/finalize",
    "displayName": "POST ext-bundles",
    "summary": "POST ext-bundles",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "ext-bundles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_extbundles_uploadproxy",
    "method": "post",
    "path": "/api/ext-bundles/upload-proxy",
    "displayName": "POST ext-bundles",
    "summary": "POST ext-bundles",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "ext-bundles"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_installinfo",
    "method": "get",
    "path": "/api/extensions/install-info",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extensions_registrydbcheck",
    "method": "get",
    "path": "/api/extensions/registry-db-check",
    "displayName": "GET extensions",
    "summary": "GET extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_extensions_reprovision",
    "method": "post",
    "path": "/api/extensions/reprovision",
    "displayName": "POST extensions",
    "summary": "POST extensions",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "extensions"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_provisioning_tenants",
    "method": "post",
    "path": "/api/provisioning/tenants",
    "displayName": "POST provisioning",
    "summary": "POST provisioning",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "provisioning"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "post-_api_v1_auth_verify",
    "method": "post",
    "path": "/api/v1/auth/verify",
    "displayName": "POST v1",
    "summary": "POST v1",
    "description": "This operation was generated automatically from the route inventory. Replace with canonical OpenAPI metadata.",
    "tags": [
      "auth"
    ],
    "approvalRequired": false,
    "parameters": [],
    "requestBodySchema": {
      "type": "object",
      "properties": {}
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "id": "get-_api_extstorage_install_installid_namespace_records",
    "method": "get",
    "path": "/api/ext-storage/install/{installId}/{namespace}/records",
    "displayName": "List records in a namespace",
    "summary": "List records in a namespace",
    "tags": [
      "Extension Storage"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "installId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "namespace",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        }
      },
      {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      },
      {
        "name": "cursor",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "keyPrefix",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "maxLength": 256
        }
      },
      {
        "name": "includeValues",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "includeMetadata",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ExtStorageListItem"
          }
        },
        "nextCursor": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "items",
        "nextCursor"
      ]
    }
  },
  {
    "id": "post-_api_extstorage_install_installid_namespace_records",
    "method": "post",
    "path": "/api/ext-storage/install/{installId}/{namespace}/records",
    "displayName": "Bulk insert/update records",
    "summary": "Bulk insert/update records",
    "tags": [
      "Extension Storage"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "installId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "namespace",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        }
      }
    ],
    "requestBodySchema": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "minLength": 1,
                "maxLength": 256
              },
              "value": {},
              "metadata": {
                "type": "object",
                "additionalProperties": {}
              },
              "ttlSeconds": {
                "type": "integer",
                "exclusiveMinimum": 0
              },
              "ifRevision": {
                "type": "integer",
                "minimum": 0
              },
              "schemaVersion": {
                "type": "integer",
                "exclusiveMinimum": 0
              }
            },
            "required": [
              "key"
            ]
          },
          "minItems": 1
        }
      },
      "required": [
        "items"
      ]
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "revision": {
                "type": "integer",
                "exclusiveMinimum": 0
              },
              "ttlExpiresAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            },
            "required": [
              "key",
              "revision",
              "ttlExpiresAt"
            ]
          }
        }
      },
      "required": [
        "namespace",
        "items"
      ]
    }
  },
  {
    "id": "get-_api_extstorage_install_installid_namespace_records_key",
    "method": "get",
    "path": "/api/ext-storage/install/{installId}/{namespace}/records/{key}",
    "displayName": "Get a record by key",
    "summary": "Get a record by key",
    "tags": [
      "Extension Storage"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "installId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "namespace",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        }
      },
      {
        "name": "key",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        }
      },
      {
        "name": "if-revision-match",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    ],
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "exclusiveMinimum": 0
        },
        "value": {},
        "metadata": {
          "type": "object",
          "additionalProperties": {}
        },
        "ttlExpiresAt": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "namespace",
        "key",
        "revision",
        "metadata",
        "ttlExpiresAt",
        "createdAt",
        "updatedAt"
      ]
    }
  },
  {
    "id": "put-_api_extstorage_install_installid_namespace_records_key",
    "method": "put",
    "path": "/api/ext-storage/install/{installId}/{namespace}/records/{key}",
    "displayName": "Create or update a record by key",
    "summary": "Create or update a record by key",
    "tags": [
      "Extension Storage"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "installId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "namespace",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        }
      },
      {
        "name": "key",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        }
      }
    ],
    "requestBodySchema": {
      "type": "object",
      "properties": {
        "value": {},
        "metadata": {
          "type": "object",
          "additionalProperties": {}
        },
        "ttlSeconds": {
          "type": "integer",
          "exclusiveMinimum": 0
        },
        "ifRevision": {
          "type": "integer",
          "minimum": 0
        },
        "schemaVersion": {
          "type": "integer",
          "exclusiveMinimum": 0
        }
      }
    },
    "responseBodySchema": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "exclusiveMinimum": 0
        },
        "ttlExpiresAt": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "namespace",
        "key",
        "revision",
        "ttlExpiresAt",
        "createdAt",
        "updatedAt"
      ]
    }
  },
  {
    "id": "delete-_api_extstorage_install_installid_namespace_records_key",
    "method": "delete",
    "path": "/api/ext-storage/install/{installId}/{namespace}/records/{key}",
    "displayName": "Delete a record by key",
    "summary": "Delete a record by key",
    "tags": [
      "Extension Storage"
    ],
    "approvalRequired": false,
    "parameters": [
      {
        "name": "installId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      {
        "name": "namespace",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        }
      },
      {
        "name": "key",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        }
      },
      {
        "name": "ifRevision",
        "in": "query",
        "required": false,
        "schema": {
          "type": [
            "integer",
            "null"
          ],
          "minimum": 0
        }
      }
    ]
  }
];

export default chatApiRegistry;
