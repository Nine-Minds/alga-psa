apiVersion: v1
kind: ConfigMap
metadata:
  name: vnc-startup-scripts
  namespace: vnc-test
data:
  vnc-startup-k8s.sh: |
    #!/bin/bash
    
    echo "=== VNC Startup Script (Kubernetes Optimized) ==="
    echo "Starting at: $(date)"
    echo "Running as: $(id)"
    echo "Memory available: $(free -h | grep Mem | awk '{print $7}')"
    
    # Function to check if a process is running
    check_process() {
        local process_name=$1
        if pgrep -f "$process_name" > /dev/null; then
            echo "✓ $process_name is running (PID: $(pgrep -f "$process_name" | head -1))"
            return 0
        else
            echo "✗ $process_name is NOT running"
            return 1
        fi
    }
    
    # Create necessary directories
    mkdir -p /tmp/.X11-unix
    chmod 1777 /tmp/.X11-unix
    
    # Set display
    export DISPLAY=:99
    echo "Display set to: $DISPLAY"
    
    # Kill any existing Xvfb processes and clean up lock files
    pkill -f "Xvfb :99" 2>/dev/null || true
    rm -f /tmp/.X99-lock /tmp/.X11-unix/X99 2>/dev/null || true
    sleep 1
    
    # Start Xvfb with minimal settings first
    echo "Starting Xvfb with minimal settings..."
    Xvfb :99 -screen 0 1024x768x16 -ac +extension RANDR > /tmp/xvfb.log 2>&1 &
    XVFB_PID=$!
    sleep 3
    
    if check_process "Xvfb :99"; then
        echo "Xvfb started successfully"
        
        # Test display
        if xdpyinfo -display :99 > /tmp/xdpyinfo.log 2>&1; then
            echo "✓ Display :99 is working"
            grep -E "(dimensions|depths)" /tmp/xdpyinfo.log | head -5
        else
            echo "⚠️  Display test failed"
            cat /tmp/xdpyinfo.log | head -10
        fi
    else
        echo "ERROR: Xvfb failed to start"
        echo "=== Xvfb log ==="
        cat /tmp/xvfb.log
        echo "=== End log ==="
    fi
    
    # Always try to start the application
    echo ""
    echo "Starting application..."
    exec npm run dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vnc-node-test
  namespace: vnc-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vnc-node-test
  template:
    metadata:
      labels:
        app: vnc-node-test
    spec:
      containers:
      - name: test
        image: node:18-bullseye-slim
        command: ["/bin/bash", "-c"]
        args:
          - |
            echo "Installing X11 dependencies..."
            apt-get update -qq
            apt-get install -qq -y xvfb x11-utils procps
            echo "Dependencies installed"
            echo ""
            exec /scripts/vnc-startup-k8s.sh
        env:
        - name: DISPLAY
          value: ":99"
        - name: NODE_ENV
          value: "development"
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: shm
          mountPath: /dev/shm
        - name: tmp
          mountPath: /tmp
        workingDir: /app
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1"
      volumes:
      - name: scripts
        configMap:
          name: vnc-startup-scripts
          defaultMode: 0755
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: 256Mi
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
