apiVersion: v1
kind: ConfigMap
metadata:
  name: vnc-test-script
  namespace: vnc-test
data:
  test-xvfb.sh: |
    #!/bin/bash
    echo "=== Xvfb Test in Kubernetes ==="
    echo "Date: $(date)"
    echo "Hostname: $(hostname)"
    echo "Memory: $(free -h)"
    echo ""
    
    # Test 1: Minimal Xvfb
    echo "Test 1: Minimal Xvfb (640x480x8)"
    Xvfb :99 -screen 0 640x480x8 -ac > /tmp/xvfb1.log 2>&1 &
    PID1=$!
    sleep 3
    if ps -p $PID1 > /dev/null; then
      echo "✓ SUCCESS: Minimal Xvfb is running (PID: $PID1)"
      kill $PID1
    else
      echo "✗ FAILED: Minimal Xvfb crashed"
      cat /tmp/xvfb1.log
    fi
    echo ""
    
    # Test 2: Standard Xvfb
    echo "Test 2: Standard Xvfb (1024x768x16)"
    Xvfb :99 -screen 0 1024x768x16 -ac > /tmp/xvfb2.log 2>&1 &
    PID2=$!
    sleep 3
    if ps -p $PID2 > /dev/null; then
      echo "✓ SUCCESS: Standard Xvfb is running (PID: $PID2)"
      kill $PID2
    else
      echo "✗ FAILED: Standard Xvfb crashed"
      cat /tmp/xvfb2.log
    fi
    echo ""
    
    # Test 3: High-res Xvfb
    echo "Test 3: High-res Xvfb (1280x1024x24)"
    Xvfb :99 -screen 0 1280x1024x24 -ac > /tmp/xvfb3.log 2>&1 &
    PID3=$!
    sleep 3
    if ps -p $PID3 > /dev/null; then
      echo "✓ SUCCESS: High-res Xvfb is running (PID: $PID3)"
      kill $PID3
    else
      echo "✗ FAILED: High-res Xvfb crashed"
      cat /tmp/xvfb3.log
    fi
    echo ""
    
    # Test 4: With extensions
    echo "Test 4: Xvfb with extensions"
    Xvfb :99 -screen 0 1024x768x16 -ac +extension GLX +extension RANDR > /tmp/xvfb4.log 2>&1 &
    PID4=$!
    sleep 3
    if ps -p $PID4 > /dev/null; then
      echo "✓ SUCCESS: Xvfb with extensions is running (PID: $PID4)"
      DISPLAY=:99 xdpyinfo > /tmp/xdpyinfo.log 2>&1
      echo "Display info:"
      grep -E "(dimensions|depths|number of extensions)" /tmp/xdpyinfo.log || echo "No display info"
      kill $PID4
    else
      echo "✗ FAILED: Xvfb with extensions crashed"
      cat /tmp/xvfb4.log
    fi
    echo ""
    
    echo "=== Test Complete ==="
    echo "Recommendation: Use the configuration that worked successfully"
    
    # Keep container running
    sleep infinity
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vnc-xvfb-test
  namespace: vnc-test
spec:
  template:
    spec:
      containers:
      - name: test
        image: debian:bullseye-slim
        command: ["/bin/bash", "-c"]
        args:
          - |
            apt-get update && apt-get install -y xvfb x11-utils procps
            cp /scripts/test-xvfb.sh /tmp/test-xvfb.sh
            chmod +x /tmp/test-xvfb.sh
            /tmp/test-xvfb.sh
        volumeMounts:
        - name: script
          mountPath: /scripts
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "512Mi"
      volumes:
      - name: script
        configMap:
          name: vnc-test-script
      - name: tmp
        emptyDir: {}
      restartPolicy: Never