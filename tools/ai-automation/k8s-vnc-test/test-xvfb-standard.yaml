apiVersion: apps/v1
kind: Deployment
metadata:
  name: xvfb-test-standard
  namespace: vnc-test
  labels:
    app: xvfb-test-standard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xvfb-test-standard
  template:
    metadata:
      labels:
        app: xvfb-test-standard
    spec:
      containers:
      - name: xvfb-test
        image: node:18-bullseye-slim
        command: ["/bin/bash", "-c"]
        args:
          - |
            set -e
            echo "=== Standard Xvfb Test with Multiple Configurations ==="
            echo "Installing dependencies..."
            apt-get update -qq
            apt-get install -qq -y --no-install-recommends \
              xvfb x11-utils procps dbus-x11 \
              libxext6 libxrender1 libxtst6 libxi6 \
              fonts-liberation
            
            echo "Creating necessary directories..."
            mkdir -p /tmp/.X11-unix /var/run/dbus
            chmod 1777 /tmp/.X11-unix
            
            echo "System resources:"
            cat /proc/meminfo | grep -E "MemTotal|MemFree|MemAvailable"
            echo "CPU info:"
            nproc
            echo ""
            
            # Test different Xvfb configurations
            CONFIGS=(
              ":99 -screen 0 640x480x8 -ac"
              ":99 -screen 0 800x600x16 -ac -nolisten tcp"
              ":99 -screen 0 1024x768x16 -ac -nolisten tcp +extension RANDR"
              ":99 -screen 0 1280x1024x24 -ac -nolisten tcp -dpi 96 +extension RANDR"
            )
            
            for i in "${!CONFIGS[@]}"; do
              echo "===================="
              echo "Testing configuration $((i+1)): Xvfb ${CONFIGS[$i]}"
              
              # Kill any existing Xvfb
              pkill -f "Xvfb :99" 2>/dev/null || true
              sleep 2
              
              # Start Xvfb
              Xvfb ${CONFIGS[$i]} > /tmp/xvfb_config_$i.log 2>&1 &
              XVFB_PID=$!
              sleep 5
              
              if ps -p $XVFB_PID > /dev/null; then
                echo "✓ Xvfb started with configuration $((i+1))"
                export DISPLAY=:99
                
                # Test display
                if xdpyinfo > /tmp/xdpyinfo_config_$i.log 2>&1; then
                  echo "✓ Display test passed"
                  echo "Screen dimensions:"
                  xdpyinfo | grep dimensions
                  echo "Color depth:"
                  xdpyinfo | grep "depth of root"
                else
                  echo "✗ Display test failed"
                  cat /tmp/xdpyinfo_config_$i.log | head -10
                fi
                
                # Memory usage
                echo "Memory usage:"
                ps aux | grep -E "Xvfb|PID" | grep -v grep
                
                # Keep the successful one running
                if [ $i -eq $((${#CONFIGS[@]} - 1)) ]; then
                  echo "Keeping last configuration running..."
                else
                  kill $XVFB_PID 2>/dev/null || true
                fi
              else
                echo "✗ Xvfb failed with configuration $((i+1))"
                echo "Error log:"
                cat /tmp/xvfb_config_$i.log | tail -20
              fi
              echo ""
            done
            
            echo "All tests completed. Keeping container alive..."
            while true; do 
              if pgrep -f "Xvfb :99" > /dev/null; then
                echo "[$(date)] Xvfb is running"
              else
                echo "[$(date)] Xvfb is NOT running"
              fi
              sleep 60
            done
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        securityContext:
          runAsNonRoot: false
          runAsUser: 0