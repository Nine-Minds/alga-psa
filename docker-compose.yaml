version: '3.8'

x-environment: &shared-environment
  # ---- APP -------
  VERSION: ${VERSION}
  APP_NAME: ${APP_NAME}
  APP_ENV: ${APP_ENV:-development}
  NODE_ENV: ${APP_ENV:-development}
  HOST: ${HOST}
  VERIFY_EMAIL_ENABLED: ${VERIFY_EMAIL_ENABLED:-false}
  EDITION: ${EDITION:-community}

  # ---- REDIS ----
  REDIS_HOST: ${REDIS_HOST:-redis}
  REDIS_PORT: ${REDIS_PORT:-6379}
  REDIS_PASSWORD: ${REDIS_PASSWORD}

  # ---- DATABASE ----
  DB_TYPE: ${DB_TYPE}
  DB_HOST: postgres
  DB_PORT: ${DB_PORT:-5432}
  DB_USER: ${DB_USER_SERVER:-postgres}
  DB_NAME: ${DB_NAME_SERVER:-postgres}
  DB_NAME_HOCUSPOCUS: ${DB_NAME_HOCUSPOCUS:-postgres}
  DB_USER_HOCUSPOCUS: ${DB_USER_HOCUSPOCUS:-postgres}
  DB_PASSWORD_HOCUSPOCUS: ${DB_PASSWORD_SERVER:-abcd1234!}
  DB_NAME_SERVER: ${DB_NAME_SERVER:-postgres}
  DB_USER_SERVER: ${DB_USER_SERVER:-postgres}
  DB_PASSWORD_SERVER: ${DB_PASSWORD_SERVER:-abcd1234!}
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: abcd1234!
  DB_USER_ADMIN: postgres
  DB_PASSWORD_ADMIN: abcd1234!
  DB_PASSWORD_SUPERUSER: abcd1234!

  # ---- LOGGING ----
  LOG_LEVEL: ${LOG_LEVEL:-INFO}
  LOG_IS_FORMAT_JSON: ${LOG_IS_FORMAT_JSON:-false}
  LOG_IS_FULL_DETAILS: ${LOG_IS_FULL_DETAILS:-false}
  LOG_ENABLED_FILE_LOGGING: ${LOG_ENABLED_FILE_LOGGING}
  LOG_DIR_PATH: ${LOG_DIR_PATH}
  LOG_ENABLED_EXTERNAL_LOGGING: ${LOG_ENABLED_EXTERNAL_LOGGING}
  LOG_EXTERNAL_HTTP_HOST: ${LOG_EXTERNAL_HTTP_HOST}
  LOG_EXTERNAL_HTTP_PORT: ${LOG_EXTERNAL_HTTP_PORT}
  LOG_EXTERNAL_HTTP_PATH: ${LOG_EXTERNAL_HTTP_PATH}
  LOG_EXTERNAL_HTTP_LEVEL: ${LOG_EXTERNAL_HTTP_LEVEL}
  LOG_EXTERNAL_HTTP_TOKEN: ${LOG_EXTERNAL_HTTP_TOKEN}

  # ---- HOCUSPOCUS ----
  HOCUSPOCUS_PORT: ${HOCUSPOCUS_PORT}
  HOCUSPOCUS_URL: ${HOCUSPOCUS_URL}

  # ---- EMAIL ----
  EMAIL_ENABLE: ${EMAIL_ENABLE:-false}
  EMAIL_FROM: ${EMAIL_FROM:-noreply@example.com}
  EMAIL_HOST: ${EMAIL_HOST}
  EMAIL_PORT: ${EMAIL_PORT:-587}
  EMAIL_USERNAME: ${EMAIL_USERNAME:-noreply@example.com}
  EMAIL_PASSWORD: ${EMAIL_PASSWORD}

  # ---- CRYPTO ----
  CRYPTO_KEY: ${KEY}
  CRYPTO_SALT_BYTES: ${SALT_BYTES}
  CRYPTO_ITERATION: ${ITERATION}
  CRYPTO_KEY_LENGTH: ${KEY_LENGTH}
  CRYPTO_ALGORITHM: ${ALGORITHM}

  # ---- TOKEN ----
  TOKEN_SECRET_KEY: ${SECRET_KEY}
  TOKEN_EXPIRES: ${TOKEN_EXPIRES}

  # ---- AUTH ----
  NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
  NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
  NEXTAUTH_SESSION_EXPIRES: ${NEXTAUTH_SESSION_EXPIRES:-86400}

  # ---- GOOGLE AUTH ----
  GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}
  GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}

  # ---- DEPLOY INFO  ----
  PROJECT_NAME: ${PROJECT_NAME}
  EXPOSE_DB_PORT: ${EXPOSE_DB_PORT:-5432}
  EXPOSE_HOCUSPOCUS_PORT: ${EXPOSE_HOCUSPOCUS_PORT:-1234}
  EXPOSE_REDIS_PORT: ${EXPOSE_REDIS_PORT:-6379}
  EXPOSE_SERVER_PORT: ${EXPOSE_SERVER_PORT:-3000}

services:
  server:
    extends:
      file: ./server/docker-compose.yaml
      service: server
    container_name: ${APP_NAME:-sebastian}_server
    networks:
      - app-network
    environment:
      <<: *shared-environment
    depends_on:
      hocuspocus:
        condition: service_started

  setup:
    build:
      context: .
      dockerfile: setup/Dockerfile
    container_name: ${APP_NAME:-sebastian}_setup
    networks:
      - app-network
    environment:
      <<: *shared-environment
      NODE_OPTIONS: --experimental-vm-modules
    command: bash -c "node /app/server/setup/create_database.js && PGPASSWORD=${DB_PASSWORD_ADMIN} psql -h postgres -U postgres -d postgres -c 'CREATE DATABASE server;' && npx knex migrate:latest && npx knex seed:run && exit"
    depends_on:
      postgres:
        condition: service_started

  hocuspocus:
    extends:
      file: ./hocuspocus/docker-compose.yaml
      service: hocuspocus
    container_name: ${APP_NAME:-sebastian}_hocuspocus
    networks:
      - app-network
    environment:
      <<: *shared-environment
    depends_on:
      redis:
        condition: service_started

  postgres:
    image: ankane/pgvector:latest
    container_name: ${APP_NAME:-sebastian}_postgres
    networks:
      - app-network
    environment:
      <<: *shared-environment
    ports:
      - "${EXPOSE_DB_PORT:-5432}:5432"

  redis:
    image: 'redis:latest'
    container_name: ${APP_NAME:-sebastian}_redis
    command: redis-server --save 20 1 --loglevel debug
    networks:
      - app-network
    environment:
      <<: *shared-environment
    ports:
      - '${EXPOSE_REDIS_PORT:-6379}:6379'

networks:
  app-network:
    name: ${APP_NAME:-sebastian}_app-network
    driver: bridge
